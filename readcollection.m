%READCOLLECTION integrates into the dipimage GUI & reads raw data from files
%
% SYNOPSIS:
%  image_out = readcollection(varargin)
%
% SEE ALSO:
%  nilio_collectionread
%
% NOTES:
%  Reads image formats according to function nilio_collectionread.
%  Derived from READIM.   
%
% $Author: jjlee $
% $Date: 2003/11/12 09:08:05 $
% $Revision: 1.3 $
% $Source: /cygdrive/c/data/home/dip_local/RCS/readcollection.m,v $

% _____________________________________________________________________
% (C) Copyright 1999-2002               Pattern Recognition Group
%     All rights reserved               Faculty of Applied Physics
%                                       Delft University of Technology
%                                       Lorentzweg 1
%                                       2628 CJ Delft
%                                       The Netherlands
%
% Cris Luengo, June 2000.
% 17 December 2001: Using MATLAB's IMREAD if dipIO cannot read the file.
% February 2002: removed static list of file formats.

% ________________________________________________________________
% (C) Copyright 2003                    Neuroimaging Laboratory
%     All rights reserved               Mallinckrodt Institute of 
%                                       Radiology
%                                       4525 Scott Ave, Box 8225
%                                       St. Louis, MO  63110
%
% John Lee, June 2003: Implemented basic functions for reading MR files
% generated by Siemens Magnetom Vision systems (SPI native format)

function image_out = readcollection(varargin)

  possTypes = {'bin', 'bin8', 'bin16', 'bin32', 'uint8', 'uint16', 'uint32', 'uint', ...
	       'sint8', 'int8', 'sint16', 'int16', 'sint32', 'int', 'int32', 'sfloat', ...
	       'float', 'single', 'dfloat', 'double', 'scomplex', 'dcomplex', 'complex'};
  
  d = struct('menu','File I/O',...
	     'display','Read arbitrary collection of data',...
	     'inparams',struct('name',       {'filename',                 'datatype', 'dim1',            'dim2',            'dim3'},...
			       'description',{'Name of the file to open', 'Datatype', 'Size of 1st Dim', 'Size of 2nd Dim', 'Size of 3rd Dim'},...
			       'type',       {'infile', 'option',   'array', 'array', 'array'},...
			       'dim_check',  {0,         0,            0,       0,       0},...
			       'range_check',{'*.*',     possTypes,   'N+',    'N+',    'N+'},...
			       'required',   {1,         0,            0,       0,       0},...
			       'default',    {'',        'double',     512,     1024,    80} ),...
	     'outparams',struct('name',{'image_out'},...
				'description',{'Output image'},...
				'type',{'image'}...
				)...
	     );
  if nargin == 1
    s = varargin{1};
    if ischar(s) & strcmp(s,'DIP_GetParamList')
      image_out = d;
      return
    end
  end
  
  try
    [filename, datatype, dim1, dim2, dim3] = getparams(d,varargin{:});
  catch
    if ~isempty(paramerror)
      error(paramerror)
    else
      error(firsterr)
    end
  end

  
  
  
  try
    %%%disp('calling nilio_readcollection');
    image_out = nilio_readcollection(filename, datatype, dim1, dim2, dim3);
  catch
    try
      %%%disp('calling magic');      
      m = nil_magic;    
      image_out = nilio_readcollection(filename, 'double',...
				       m.RowsMont*m.Dim,...
				       m.ColsMont*m.Dim2,...
				       m.MaxTimes);
    catch
      error('sorry...  readcollection failed')
    end
  end