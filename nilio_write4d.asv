% NILIO_WRITE4DFP writes 4dfp objects from Matlab to file systems
%
% USAGE: nilio_write4dfp(object, endian, filename)
%
% SEE ALSO:
%     nilio_read4dfp
%
% PARAMETERS:
%  object    - 4dfp object from Matlab
%  endian   - native, ieee-le, or ieee-be
%  filename - string with name of file
%
% $Author: jjlee $
% $Date: 2003/10/23 03:27:30 $
% $Revision: 1.2 $
% $Source: /cygdrive/c/local/dipimage-23jun2003/local/RCS/nilio_writecollection.m,v $


function nilio_write4d(object, datatype, endian, filename)

  dims = size(object);
  size_dims = size(dims);
  rank = size_dims(2);
  
  if (rank ~= 4) error('oops... passed object does not have rank == 4');
  % check for silly inputs 
  if (~strcmp('bin', datatype) & ... 
      ~strcmp('bin8', datatype) & ...
      ~strcmp('bin16', datatype) & ...
      ~strcmp('bin32', datatype) & ...
      ~strcmp('uint8', datatype) & ...      
      ~strcmp('uint16', datatype) & ...      
      ~strcmp('uint32', datatype) & ...      
      ~strcmp('uint', datatype) & ...      
      ~strcmp('sint8', datatype) & ...      
      ~strcmp('int8', datatype) & ...      
      ~strcmp('sint16', datatype) & ...      
      ~strcmp('int16', datatype) & ...      
      ~strcmp('sint32', datatype) & ...      
      ~strcmp('int', datatype) & ...      
      ~strcmp('int32', datatype) & ...      
      ~strcmp('sfloat', datatype) & ...      
      ~strcmp('float', datatype) & ...      
      ~strcmp('single', datatype) & ...      
      ~strcmp('dfloat', datatype) & ...      
      ~strcmp('double', datatype) & ...      
      ~strcmp('scomplex', datatype) & ...      
      ~strcmp('dcomplex', datatype) & ...      
      ~strcmp('complex', datatype) ...
      ) error('oops... unrecognized data type'); end
  if (~strcmp('ieee-be', endian) & ... 
      ~strcmp('ieee-le', endian) & ...
      ~strcmp('native', endian) ...      
      ) error('oops... unrecognized data endian'); end
  if (strcmp('', filename)) error('oops... missing filename'); end


  subobject = newim(dims(1), dims(2));

  fid = fopen(filename, 'w+', endian);
  for j = 0:dims(4)-1
      for k = 0:dims(3)-1
          if (dims(3) > 1 & dims(4) > 1)
              disp(['   fwriting indices -> (:,:,' int2str(k) ',' int2str(j) ')']);
          end
          try
              subobject(:,:) = object(:,:,k,j);
              double_subobject = double(subobject); 
          catch
              error('oops... DIPimage -> Matlab conversion failed');
          end
          try
              fwrite(fid, double_subobject', datatype);   % NB transpose, described in nilio_read4dfp
          catch
              error('oops... fwrite failed');
          end   
      end
  end
  fclose(fid);
  

  